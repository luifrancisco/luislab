---
- name: ping module 
  hosts: all
  become: false
  tasks:
    - name: test connection
      ping:

- name: upgrade 22.04 kernel
  hosts: all
  become: true
  tasks:
    - name: perform apt-get update
      apt:
        update_cache: yes

    - name: install linux-generic-hwe-22.04
      apt:
        name: linux-generic-hwe-22.04
        state: latest
        install_recommends: yes

- name: update ubuntu packges
  hosts: all
  become: true
  tasks:
    - name: perform apt-get update
      apt:
        update_cache: yes

    - name: install curl
      apt:
        name: curl
        state: latest
        install_recommends: yes

    - name: install wget
      apt:
        name: wget
        state: latest
        install_recommends: yes

    - name: install jq
      apt:
        name: jq
        state: latest
        install_recommends: yes

    - name: install nfs-common
      apt:
        name: nfs-common
        state: latest
        install_recommends: yes

    - name: install open-iscsi
      apt:
        name: open-iscsi
        state: latest
        install_recommends: yes

- name: start iscsid service
  hosts: all
  become: true
  tasks:
    - name: start iscsid service
      service:
        name: iscsid
        enabled: yes
        state: started

- name: update  /etc/hosts 
  hosts: all
  become: true
  tasks:      
    - name: update with first vm ip information
      lineinfile:
        # update ip and hostname
        line: 10.20.0.91 stg-k8s-master-1
        path: /etc/hosts
    - name: update with second vm ip information
      lineinfile:
        # update ip and hostname
        line: 10.20.0.92 stg-k8s-master-2
        path: /etc/hosts
    - name: update with third vm ip information
      lineinfile:
        # update ip and hostname
        line: 10.20.0.93 stg-k8s-master-3
        path: /etc/hosts
    - name: Comment out the line update_etc_hosts in /etc/cloud/cloud.cfg
      replace:
        path: /etc/cloud/cloud.cfg
        regexp: ' - update_etc_hosts'
        replace: '# - update_etc_hosts'
- name: Create 'luis' user and group.
  hosts: all
  become: true
  tasks:
    - name: Create group.
      ansible.builtin.group:
        name: luis
    - name: Create the user 'luis' with a bash shell, appending the group 'admin' to the user's groups
      ansible.builtin.user:
        name: luis
        shell: /bin/bash
        group: luis
        groups: admin
        append: yes
        create_home: true
    - name: Set up multiple authorized keys
      ansible.posix.authorized_key:
        user: luis
        state: present
        key: '{{ item }}'
      with_file:
        - authorized_keys/luis-daikanyama.pub
        - authorized_keys/luis-popos.pub

- name: reboot VMs
  hosts: all
  become: true
  tasks:      
    - name: reboot all VMs
      reboot:
